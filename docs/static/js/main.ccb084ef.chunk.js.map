{"version":3,"sources":["MdiMenu.jsx","MdiChildWindow.js","ContactForm.js","ItemsList.js","MdiContainer.js","App.js","serviceWorker.js","index.js"],"names":["MdiMenu","this","props","items","map","item","className","href","onClick","action","label","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","menuItems","React","Component","MdiChildWindow","brintToFront","value","setState","zIndex","windowPosition","bind","minimizeWindow","dragStart","dragEnd","drag","toggleSize","deactivateFocus","registerWindow","windowTitle","state","active","currentX","currentY","initialX","initialY","xOffset","yOffset","childWindowsMaxIndex","maximized","e","touches","clientX","clientY","target","refs","container","setChildWindowMaxIndex","preventDefault","addEventListener","minimized","stopPropagation","windowSizing","ref","style","transform","onDoubleClick","maximizeRestoreIcon","deRegisterWindow","children","name","close","index","ContactForm","ItemsList","tableRows","a","key","Faker","company","companyName","table","MdiContainer","windows","subscribedWindows","closeChildWindowHandler","activeWindowComponents","componentName","callback","filter","window","toString","title","addWindow","w","wrappedComponent","ChildComponent","activeWindow","zIndexForNewWindow","length","newContactForm","newItemsList","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccb084ef.chunk.js","sourcesContent":["import React from \"react\";\n\nclass MdiMenu extends React.Component {\n  menuItems() {\n    return this.props.items.map(item => {\n      return (\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"./bs.com\" onClick={item.action}>\n            {item.label} <span className=\"sr-only\">(current)</span>\n          </a>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"./bs.com\">\n          Navbar w/ text\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">{this.menuItems()}</ul>\n          <span className=\"navbar-text\">Navbar text with an inline element</span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default MdiMenu;\n","import React from \"react\";\n\nconst MAXIMIZE_STYLE = \"maximized-child-window\";\nconst MINIMIZE_STYLE = \"minimized-child-window\";\n\nclass MdiChildWindow extends React.Component {\n  brintToFront = value => {\n    this.setState({ zIndex: value });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.windowPosition = this.windowPosition.bind(this);\n    this.minimizeWindow = this.minimizeWindow.bind(this);\n    this.dragStart = this.dragStart.bind(this);\n    this.dragEnd = this.dragEnd.bind(this);\n    this.drag = this.drag.bind(this);\n    this.toggleSize = this.toggleSize.bind(this);\n    this.deactivateFocus = this.deactivateFocus.bind(this);\n    props.registerWindow(props.windowTitle, this.brintToFront);\n\n    this.state = {\n      active: false,\n      currentX: 0,\n      currentY: 0,\n      initialX: 0,\n      initialY: 0,\n      xOffset: 0,\n      yOffset: 0,\n      zIndex: props.childWindowsMaxIndex,\n      maximized: false\n    };\n  }\n\n  deactivateFocus() {\n    this.setState({\n      active: false\n    });\n  }\n\n  dragStart(e) {\n    if (e.type === \"touchstart\") {\n      this.setState({\n        initialX: e.touches[0].clientX - this.state.xOffset,\n        initialY: e.touches[0].clientY - this.state.yOffset\n      });\n    } else {\n      this.setState({\n        initialX: e.clientX - this.state.xOffset,\n        initialY: e.clientY - this.state.yOffset\n      });\n    }\n\n    if (e.target === this.refs.container) {\n      this.props.setChildWindowMaxIndex(value => {\n        this.setState({ zIndex: value, active: true });\n      });\n    }\n  }\n\n  dragEnd(e) {\n    this.deactivateFocus();\n    this.setState({\n      initialX: this.state.currentX,\n      initialY: this.state.currentY\n    });\n  }\n\n  drag(e) {\n    e.preventDefault();\n    if (this.state.maximized) {\n      return false;\n    }\n    if (this.state.active) {\n      if (e.type === \"touchmove\") {\n        this.setState({\n          currentX: e.touches[0].clientX - this.state.initialX,\n          currentY: e.touches[0].clientY - this.state.initialY\n        });\n      } else {\n        this.setState({\n          currentX: e.clientX - this.state.initialX,\n          currentY: e.clientY - this.state.initialY\n        });\n      }\n\n      this.setState({\n        xOffset: this.state.currentX,\n        yOffset: this.state.currentY\n      });\n    }\n  }\n\n  windowPosition() {\n    return \"translate3d(\" + this.state.currentX + \"px, \" + this.state.currentY + \"px, 0)\";\n  }\n\n  componentDidMount() {\n    const container = this.refs.container;\n\n    container.addEventListener(\"touchstart\", this.dragStart, false);\n    container.addEventListener(\"touchend\", this.dragEnd, false);\n    container.addEventListener(\"touchmove\", this.drag, false);\n\n    container.addEventListener(\"mousedown\", this.dragStart, false);\n    container.addEventListener(\"mouseup\", this.dragEnd, false);\n    container.addEventListener(\"mousemove\", this.drag, false);\n    container.addEventListener(\"mouseleave\", this.deactivateFocus, false);\n  }\n\n  toggleSize() {\n    if (this.state.maximized) {\n      this.setState({\n        maximized: false,\n        minimized: false\n      });\n    } else {\n      this.setState(\n        {\n          maximized: true,\n          minimized: false,\n          currentX: 0,\n          currentY: 0,\n          initialX: 0,\n          initialY: 0,\n          xOffset: 0,\n          yOffset: 0\n        },\n        () => {\n          this.props.setChildWindowMaxIndex(value => {\n            this.setState({ zIndex: value });\n          });\n        }\n      );\n    }\n  }\n\n  windowSizing() {\n    if (this.state.minimized === true) {\n      return MINIMIZE_STYLE;\n    }\n\n    if (this.state.maximized === true) {\n      return MAXIMIZE_STYLE;\n    }\n  }\n\n  maximizeRestoreIcon() {\n    return this.state.maximized ? \"window-restore\" : \"window-maximize\";\n  }\n\n  minimizeWindow(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (this.state.minimized) {\n      this.setState({\n        minimized: false\n      });\n    } else {\n      this.setState({\n        maximized: false,\n        minimized: true\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className={`card mdi-child-window ${this.windowSizing()}`} ref=\"holder\" style={{ zIndex: this.state.zIndex, transform: this.windowPosition() }}>\n        <div className=\"card-header mdi-child-window-header\" ref=\"container\" onDoubleClick={this.toggleSize}>\n          <button onClick={this.minimizeWindow} className=\"btn btn-warning rounded-circle\">\n            <i className={`fa fa-window-minimize`}></i>\n          </button>{\" \"}\n          <button onClick={this.toggleSize} className=\"btn btn-success rounded-circle\">\n            <i className={`fa fa-${this.maximizeRestoreIcon()}`}></i>\n          </button>{\" \"}\n          <button\n            className=\"btn btn-danger rounded-circle\"\n            onClick={() => {\n              this.props.deRegisterWindow(this.props.children.type.name);\n              this.props.close(this.props.index);\n            }}\n          >\n            <i className=\"fa fa-window-close\"></i>\n          </button>\n        </div>\n        <div className=\"card-body\">{this.props.children}</div>\n        <div className=\"card-footer\"></div>\n      </div>\n    );\n  }\n}\n\nexport default MdiChildWindow;\n","import React from \"react\";\n\nclass ContactForm extends React.Component {\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport Faker from \"faker\";\n\nclass ItemsList extends React.Component {\n  table() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <table className=\"table table-stripped\">\n            <thead className=\"text-primary\">\n              <tr>\n                <th>Title</th>\n                <th>Category</th>\n                <th>Headline</th>\n                <th>Author</th>\n                <th>Website</th>\n              </tr>\n            </thead>\n            <tbody>{this.tableRows()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  tableRows() {\n    const arr = [1, 2, 3, 4, 5, 6, 7];\n    return arr.map(a => {\n      return (\n        <tr key={a}>\n          <td>{Faker.company.companyName()}</td>\n          <td>{Faker.company.companyName()}</td>\n          <td>{Faker.company.companyName()}</td>\n          <td>{Faker.company.companyName()}</td>\n          <td>{Faker.company.companyName()}</td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return this.table();\n  }\n}\n\nexport default ItemsList;\n","import React from \"react\";\nimport MdiMenu from \"./MdiMenu\";\nimport MdiChildWindow from \"./MdiChildWindow\";\nimport ContactForm from \"./ContactForm\";\nimport ItemsList from \"./ItemsList\";\n\nclass MdiContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      windows: [],\n      subscribedWindows: {},\n      childWindowsMaxIndex: 0\n    };\n\n    this.setChildWindowMaxIndex = this.setChildWindowMaxIndex.bind(this);\n    this.closeChildWindowHandler = this.closeChildWindowHandler.bind(this);\n    this.activeWindowComponents = this.activeWindowComponents.bind(this);\n    this.deRegisterWindow = this.deRegisterWindow.bind(this);\n    this.registerWindow = this.registerWindow.bind(this);\n  }\n\n  deRegisterWindow(componentName) {\n    let subscribedWindows = this.state.subscribedWindows;\n\n    delete subscribedWindows[componentName];\n\n    this.setState({\n      subscribedWindows: subscribedWindows\n    });\n  }\n\n  registerWindow(componentName, callback) {\n    let subscribedWindows = this.state.subscribedWindows;\n\n    subscribedWindows[componentName] = callback;\n\n    this.setState({\n      subscribedWindows: subscribedWindows\n    });\n  }\n\n  setChildWindowMaxIndex(callback) {\n    const value = this.state.childWindowsMaxIndex + 1;\n\n    callback(value);\n\n    this.setState({\n      childWindowsMaxIndex: value\n    });\n  }\n\n  windows() {\n    return this.state.windows;\n  }\n\n  zIndexForNewWindow() {\n    const value = this.state.childWindowsMaxIndex + 1;\n\n    this.setState({\n      childWindowsMaxIndex: value\n    });\n\n    return value;\n  }\n\n  closeChildWindowHandler(index) {\n    const windows = this.windows();\n\n    this.setState({\n      windows: windows.filter(window => !(window.key === index.toString()))\n    });\n  }\n\n  newContactForm(e, title) {\n    e.preventDefault();\n\n    this.addWindow(ContactForm, title);\n  }\n\n  newItemsList(e, title) {\n    e.preventDefault();\n\n    this.addWindow(ItemsList, title);\n  }\n\n  activeWindowComponents() {\n    return this.windows().map(w => w.props.wrappedComponent.name);\n  }\n\n  addWindow(ChildComponent, windowTitle) {\n    const activeWindow = this.state.subscribedWindows[windowTitle];\n\n    if (activeWindow) {\n      activeWindow(this.zIndexForNewWindow());\n      return;\n    }\n\n    this.setState({\n      windows: [\n        ...this.state.windows,\n        <MdiChildWindow\n          key={this.state.windows.length}\n          index={this.state.windows.length}\n          close={this.closeChildWindowHandler}\n          windowTitle={windowTitle}\n          wrappedComponent={ChildComponent}\n          registerWindow={this.registerWindow}\n          deRegisterWindow={this.deRegisterWindow}\n          setChildWindowMaxIndex={this.setChildWindowMaxIndex}\n          childWindowsMaxIndex={this.zIndexForNewWindow()}\n        >\n          <ChildComponent />\n        </MdiChildWindow>\n      ]\n    });\n  }\n\n  menuItems() {\n    return [\n      {\n        label: \"Contact Form\",\n        action: e => {\n          this.newContactForm(e, \"Contact Form\");\n        }\n      },\n      {\n        label: \"Items List\",\n        action: e => {\n          this.newItemsList(e, \"Items List\");\n        }\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <div>\n        <MdiMenu items={this.menuItems()} />\n        {this.windows()}\n      </div>\n    );\n  }\n}\n\nexport default MdiContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport MdiContainer from \"./MdiContainer\";\n\nfunction App() {\n  return (\n    <section className=\"container-holder\">\n      <MdiContainer />\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}